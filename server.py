from flask import Flask, request, jsonify
import random

app = Flask(__name__)

# –ö–æ–ª–æ–¥–∞ –∫–∞—Ä—Ç (—Å —É—á–µ—Ç–æ–º –º–∞—Å—Ç–µ–π –¥–ª—è Blackjack)
cards = [2, 3, 4, 5, 6, 7, 8, 9, 10, 10,
         10, 10, 11]  # –¢—É–∑ –º–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç—å 1 –∏–ª–∏ 11


def calculate_score(hand):
    """–°—á–∏—Ç–∞–µ—Ç —Å—É–º–º—É –æ—á–∫–æ–≤ –≤ —Ä—É–∫–µ —Å —É—á–µ—Ç–æ–º —Ç—É–∑–∞."""
    score = sum(hand)
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—É–∑–æ–≤
    aces = hand.count(11)
    while score > 21 and aces > 0:
        score -= 10
        aces -= 1
    return score


@app.route('/alice', methods=['POST'])
def handle_alice():
    data = request.json
    command = data['request']['command'].lower()
    session = data['session']
    user_id = session['user_id']

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã (–µ—Å–ª–∏ –µ—ë –Ω–µ—Ç –≤ —Å–µ—Å—Å–∏–∏)
    if 'game' not in session:
        session['game'] = {
            'player_hand': [],
            'dealer_hand': [],
            'game_over': False
        }

    game = session['game']

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if "—Å—Ç–∞—Ä—Ç" in command or "–Ω–∞—á–∞—Ç—å" in command:
        # –†–∞–∑–¥–∞—á–∞ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö –∫–∞—Ä—Ç
        game['player_hand'] = [random.choice(cards), random.choice(cards)]
        game['dealer_hand'] = [random.choice(cards), random.choice(cards)]
        game['game_over'] = False

        response_text = (
            f"–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í–∞—à–∏ –∫–∞—Ä—Ç—ã: {game['player_hand']} (—Å—É–º–º–∞: {calculate_score(game['player_hand'])}). "
            f"–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞: {game['dealer_hand'][0]} –∏ ?. "
            "–°–∫–∞–∂–∏—Ç–µ '–µ—â—ë –∫–∞—Ä—Ç—É' –∏–ª–∏ '–ø–∞—Å'?"
        )

    elif "–µ—â—ë" in command and not game['game_over']:
        game['player_hand'].append(random.choice(cards))
        player_score = calculate_score(game['player_hand'])

        if player_score > 21:  # –ò–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ 21
            game['game_over'] = True
            response_text = f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {game['player_hand']} (—Å—É–º–º–∞: {player_score}). –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! üò¢"
        else:
            response_text = f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {game['player_hand']} (—Å—É–º–º–∞: {player_score}). –ü–∞—Å –∏–ª–∏ –µ—â—ë?"

    elif "–ø–∞—Å" in command and not game['game_over']:
        # –î–∏–ª–µ—Ä –¥–æ–±–∏—Ä–∞–µ—Ç –∫–∞—Ä—Ç—ã –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º Blackjack
        player_score = calculate_score(game['player_hand'])
        dealer_score = calculate_score(game['dealer_hand'])

        while dealer_score < 17:
            game['dealer_hand'].append(random.choice(cards))
            dealer_score = calculate_score(game['dealer_hand'])

        game['game_over'] = True

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        if player_score > 21:
            result = "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! üò¢"
        elif dealer_score > 21 or player_score > dealer_score:
            result = "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ"
        elif player_score < dealer_score:
            result = "–î–∏–ª–µ—Ä –≤—ã–∏–≥—Ä–∞–ª. üò¢"
        else:
            result = "–ù–∏—á—å—è!"

        response_text = (
            f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {game['player_hand']} ({player_score}). "
            f"–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞: {game['dealer_hand']} ({dealer_score}). {result}"
        )

    else:
        response_text = "–ù–µ –ø–æ–Ω—è–ª–∞. –°–∫–∞–∂–∏—Ç–µ '–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É', '–µ—â—ë –∫–∞—Ä—Ç—É' –∏–ª–∏ '–ø–∞—Å'."

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    response = {
        "version": data["version"],
        "session": session,
        "response": {
            "text": response_text,
            "end_session": game['game_over']
        }
    }

    return jsonify(response)


if __name__ == '__main__':
    app.run()
